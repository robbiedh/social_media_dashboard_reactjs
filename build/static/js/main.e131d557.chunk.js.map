{"version":3,"sources":["App.js","component/History.js","component/NavCostume.js","Setting.js","component/TableRowUser.js","page/List_user.js","component/TableRowPost.js","page/List_post.js","component/TableRowAllPost.js","page/ListAll_post.js","component/TableRowAlbum.js","page/List_album.js","component/TableRowComment.js","page/List_comment.js","component/TableRowPhoto.js","page/List_photo.js","page/Detail_photo.js","page/Edit_comment.js","page/Edit_post.js","page/Add_post.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","Component","createBrowserHistory","NavCostume","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","bind","assertThisInitialized","state","collapsed","setState","Navbar","color","light","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","src_Setting","Setting","url","TableRowUser","id","obj","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhares","bs","react_router_dom","to","Button","List_user","users","visible","_this2","axios","get","then","response","data","console","log","JSON","stringify","catch","error","Row","Col","xs","Spinner","Table","dark","size","width","map","key","component_TableRowUser","TableRowPost","title","body","List_post","params","match","posts","id_user","component_TableRowPost","TableRowAllPost","user","handleDelet","userId","uri","delete","alert","History","push","_this3","type","value","ListAll_post","component_TableRowAllPost","TableRowAlbum","List_album","albums","component_TableRowAlbum","TableRowComment","id_post","List_comment","comments","component_TableRowComment","TableRowPhoto","src","thumbnailUrl","List_photo","photos","id_album","component_TableRowPhoto","Detail_photo","photo","album","id_photo","getdata_album","albumId","Edit_comment","comment","id_comment","put","onChange","objectSpread","target","handle_update","Edit_post","post","Add_post","Form","FormGroup","Label","for","Input","placeholder","Boolean","window","location","hostname","routing","history","Container","component_NavCostume","react_router","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e131d557.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport './App.css';\n\n\n\nclass  App  extends Component{\n  render(){\n    return(\n    <div>  \n    <h1> Home </h1>\n    \n    </div>\n    );\n  }\n}\n\nexport default App;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React, {Component} from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\nclass NavCostume extends Component{\n    constructor(props) {\n    super(props);\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true\n    };\n  }\n  \n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\nrender(){\n    return(<div>\n        <Navbar color=\"faded\" light>\n          <NavbarBrand href=\"/\" className=\"mr-auto\">Social Media Dashboard</NavbarBrand>\n          <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n          <Collapse isOpen={!this.state.collapsed} navbar>\n            <Nav navbar>\n              <NavItem>\n                <NavLink href=\"/\">Home</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/users\">User</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/post-all\">Post</NavLink>\n              </NavItem>\n              \n             \n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>);\n}\n}\nexport default NavCostume;","class Setting {\n  constructor(){\n    this.url = 'https://jsonplaceholder.typicode.com';\n  }\n}\nexport default (new Setting);","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nclass TableRowUser  extends Component{\n    constructor(props) {\n      super(props);\n     \n     }\n    render(){\n        return(\n            <tr>\n                 <td>{this.props.id+1} </td>\n                <td>{this.props.obj.id}</td>\n                <td>{this.props.obj.name}</td>\n                <td>{this.props.obj.username}</td>\n                <td>{this.props.obj.email}</td>\n                <td>{this.props.obj.address.street}</td>\n                <td>{this.props.obj.address.suite}</td>\n                <td>{this.props.obj.address.city}</td>\n                <td>{this.props.obj.address.zipcode}</td>\n                <td>{this.props.obj.address.geo.lat}</td>\n                <td>{this.props.obj.address.geo.lng}</td>\n                <td>{this.props.obj.phone}</td>\n                <td>{this.props.obj.website}</td>\n                <td>{this.props.obj.company.name}</td>\n                <td>{this.props.obj.company.catchPhares}</td>\n                <td>{this.props.obj.company.bs}</td>\n                <td> <Link to={'/post/'+this.props.obj.id}  > <Button color=\"info\" >   Lihat Post </Button> </Link>  </td>\n                 <td> <Link to={'/album/'+this.props.obj.id} ><Button color=\"info\" >   Lihat Album </Button></Link> </td>\n            </tr>\n            \n            )\n    }\n}\nexport default TableRowUser;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Container, Row, Col, Spinner } from 'reactstrap';\nimport { Table } from 'reactstrap';\nimport { Link } from 'react-router';\nimport Setting from '../Setting'\nimport  TableRowUser from '../component/TableRowUser'\nclass  List_user extends Component{\n   constructor(props) {\n       super(props);\n       this.state = {users: [] ,visible:false};\n        \n     }\n     componentDidMount(){\n          this.setState({  visible:true});\n       axios.get(Setting.url + '/users')\n       .then(response => {\n         this.setState({ users: response.data , visible:false});\n         console.log('data produk : '+JSON.stringify(response.data))\n       })\n       .catch(function (error) {\n         console.log(error);\n       })\n     }\n     \n  render(){\n    return(\n        <div>\n       \n        <Row>\n            <Col><h1> Halaman List User  </h1></Col>\n        </Row>\n          {this.state.visible ?<Row> <Col xs=\"auto\" > <Spinner /> </Col> </Row>:   \n         <Row>\n      <Col>\n        <Table dark size={{width:'100%'}}>\n          <thead>\n            <tr>\n                <td>Nomer </td>\n                <td>ID</td>\n                <td> Name</td>\n                <td>Username</td>\n                <td> Email</td>\n                <td> Street</td>\n                <td> suite</td>\n                <td> city</td>\n                <td> zipcode</td>\n                <td> latitude</td>\n                <td> Longitude</td>\n                <td> Phone</td>\n                <td> Website</td>\n                <td> Company Name</td>\n                <td> Company catchpharse</td>\n                <td> Company bs</td>\n                <td> Post User</td>\n                <td>Album User</td>\n            </tr>\n            </thead>\n            <tbody>\n                {this.state.users.map((data,key)=>\n                  <TableRowUser key={key} id={key} obj={data} />\n                )}\n            </tbody>\n        </Table>\n       </Col>\n       </Row>\n          }\n        </div>\n        );  \n  }\n    \n}\n\nexport default List_user;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass TableRowPost extends Component{\n      constructor(props) {\n      super(props);\n     \n     }\n    \n    \n    render(){\n        return(\n        <tr>\n             <td>{this.props.id+1} </td>\n            <td> {this.props.obj.id}</td>\n            <td> {this.props.obj.title}</td>\n            <td> {this.props.obj.body}</td>\n            \n        </tr>\n        );\n    }\n    \n}\nexport default  TableRowPost;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Button, Table ,Row, Col} from 'reactstrap';\nimport Setting from '../Setting'\nimport TableRowPost from '../component/TableRowPost';\n\n\n\nclass  List_post extends Component{\n    constructor(props) {\n       super(props);\n        const { params } = this.props.match\n       this.state = {posts: [], id_user:  params.id};\n       console.log(this.state.id_user);\n     }\n     componentDidMount(){\n         axios.get(Setting.url + '/posts?userId='+this.state.id_user)\n       .then(response => {\n         this.setState({ posts: response.data });\n         console.log('data post : '+JSON.stringify(response.data))\n       })\n       .catch(function (error) {\n         console.log(error);\n       })\n     }\n     render(){\n         return(<div>\n                <Row>\n                <Col>\n                    <h1> List  Post User </h1>\n                </Col>\n                </Row>\n                <Row>\n                <Col>\n                <Link to=\"/add-post\" ><Button color=\"success\">Add Post </Button>  </Link>\n                </Col>\n                </Row>\n                <Row> \n                <Table dark>\n                    <thead >\n                        <tr>\n                         <td>Nomer </td>\n                            <td>Id Post </td>\n                             <td>Judul Post </td>\n                            <td> Body Post </td>\n                            <td> # </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.posts.map((data,key)=>\n                        <TableRowPost key={key} id={key} obj={data}/>\n                    )}\n                    </tbody>\n                </Table>\n                </Row>\n                </div>);\n     }\n    \n}\nexport default List_post;","import React, {Component} from 'react';\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport Setting from '../Setting'\nimport  History from './History'\nclass TableRowAllPost extends Component{\n      constructor(props) {\n      super(props);\n       this.state = {user:[] };\n        this.handleDelet = this.handleDelet.bind(this);\n     }\n     componentDidMount(){\n        //  count self=this;\n         axios.get(Setting.url + '/users?id='+this.props.obj.userId)\n       .then(response => {\n         this.setState({ user: response.data[0] });\n        //   console.log('data post : '+JSON.stringify(response.data))\n       })\n       .catch(function (error) {\n         console.log(error);\n       })\n     }\n    handleDelet(){\n    let uri = Setting.url + '/posts/'+this.props.obj.id;\n    axios.delete(uri)\n    .then(response => {\n        console.log(response.data);\n         alert(\"Data Berhasil Di Hapus\");\n        History.push('/post-all');\n    })\n       .catch(function (error) {\n         console.log(error);\n       });\n \n   \n    }\n    render(){\n        \n        \n        return(\n        <tr>\n         <td> {this.props.id+1}</td>\n        <td> {this.props.obj.id}</td>\n        <td> {this.state.user.username}</td>\n         <td> {this.state.user.email}</td>\n        <td> {this.props.obj.title}</td>\n        <td> {this.props.obj.body}</td>\n         <td>\n         <Link to={\"comment/\"+this.props.obj.id} > Lihat Commentar </Link>\n         <input type=\"submit\" onClick={()=> this.handleDelet()}  value=\"Delete\" className=\"btn btn-danger\"/>\n         <Link to={\"edit-post/\"+this.props.obj.id} > Edit Post  </Link>\n         \n           </td>\n        </tr>\n        );\n    }\n    \n}\nexport default  TableRowAllPost;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Setting from '../Setting'\nimport TableRowAllPost from '../component/TableRowAllPost'\n\n\nclass  ListAll_post extends Component{\n    constructor(props) {\n       super(props);\n        const { params } = this.props.match\n       this.state = {posts: [] };\n      \n     }\n     componentDidMount(){\n         axios.get(Setting.url + '/posts')\n       .then(response => {\n         this.setState({ posts: response.data });\n         console.log('data post : '+JSON.stringify(response.data))\n       })\n       .catch(function (error) {\n         console.log(error);\n       })\n     }\n     render(){\n         return(<div>\n                <h1> List  All Post  </h1>\n                  <Link to=\"/add-post\" > Add Post  </Link>\n                <table>\n                    <thead>\n                        <tr>\n                            <td>Nomer  </td>\n                            <td>Id Post </td>\n                            <td>Username </td>\n                              <td>Email </td>\n                             <td>Judul Post </td>\n                            <td>Body Post </td>\n                            <td># </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.posts.map((data,key)=>\n                        <TableRowAllPost key={key} id={key} obj={data}/>\n                    )}\n                    </tbody>\n                </table>\n                </div>);\n     }\n    \n}\nexport default ListAll_post;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass TableRowAlbum extends Component{\n      constructor(props) {\n      super(props);\n     \n     }\n    \n    \n    render(){\n        return(\n        <tr>\n                <td> {this.props.id+1}</td>\n                <td> {this.props.obj.id}</td>\n                <td> {this.props.obj.title}</td>\n                <td> <Link to={\"/photo/\"+this.props.obj.id} > Lihat Photo </Link> </td>\n        </tr>\n        );\n    }\n    \n}\nexport default  TableRowAlbum;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router';\nimport Setting from '../Setting'\nimport TableRowAlbum from '../component/TableRowAlbum'\n\n\nclass  List_album extends Component{\n    constructor(props) {\n       super(props);\n        const { params } = this.props.match\n       this.state = {albums: [], id_user:  params.id};\n      \n     }\n     componentDidMount(){\n         axios.get(Setting.url + '/albums?userId='+this.state.id_user)\n       .then(response => {\n         this.setState({ albums: response.data });\n         console.log('data post : '+JSON.stringify(response.data))\n       })\n       .catch(function (error) {\n         console.log(error);\n       })\n     }\n     render(){\n         return(<div>\n                <h1> List  Album User </h1>\n                <table>\n                    <thead>\n                        <tr>\n                            <td>Nomer  </td>\n                            <td>Id Album </td>\n                             <td>Judul Album </td>\n                          \n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.albums.map((data,key)=>\n                        <TableRowAlbum key={key} id={key} obj={data}/>\n                    )}\n                    </tbody>\n                </table>\n                </div>);\n     }\n    \n}\nexport default List_album;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Setting from '../Setting'\nimport  History from './History'\nclass TableRowComment extends Component{\n      constructor(props) {\n      super(props);\n       this.state = {user:[] };\n        this.handleDelet = this.handleDelet.bind(this);\n     }\n    handleDelet(){\n    let uri = Setting.url + '/comments/'+this.props.obj.id;\n    axios.delete(uri)\n    .then(response => {\n        console.log(response.data);\n         alert(\"Comment  Berhasil Di Hapus\");\n        History.push('/comment/'+this.props.id_post);\n    })\n       .catch(function (error) {\n         console.log(error);\n       });\n \n   \n    }\n    \n    render(){\n        return(\n        <tr>\n         <td> {this.props.id+1}</td>\n        <td> {this.props.obj.id}</td>\n        <td> {this.props.obj.name}</td>\n        <td> {this.props.obj.email}</td>\n        <td> {this.props.obj.body}</td>\n        <td>\n            <input type=\"submit\" onClick={()=> this.handleDelet()}  value=\"Delete Comment\" className=\"btn btn-danger\"/>\n            <Link to={\"/edit-comment/\"+this.props.obj.id} > Edit Comment  </Link>\n        </td>\n       \n        </tr>\n        );\n    }\n    \n}\nexport default  TableRowComment;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router';\nimport Setting from '../Setting'\nimport TableRowComment from '../component/TableRowComment'\n\n\nclass  List_comment extends Component{\n    constructor(props) {\n       super(props);\n        const { params } = this.props.match\n       this.state = {comments: [], id_post:  params.id};\n      \n     }\n     componentDidMount(){\n         axios.get(Setting.url + '/comments?userId='+this.state.id_post)\n       .then(response => {\n         this.setState({ comments: response.data });\n         console.log('data post : '+JSON.stringify(response.data))\n       })\n       .catch(function (error) {\n         console.log(error);\n       })\n     }\n     render(){\n         return(<div>\n                <h1> List  Comment  </h1>\n                <table>\n                    <thead>\n                        <tr>\n                            <td>Nomer  </td>\n                            <td>Id  </td>\n                             <td>Name </td>\n                             <td>Email </td>\n                             <td>Body  </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.comments.map((data,key)=>\n                        <TableRowComment key={key} id_post={this.state.id_post} id={key} obj={data}/>\n                    )}\n                    </tbody>\n                </table>\n                </div>);\n     }\n    \n}\nexport default List_comment;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass TableRowPhoto extends Component{\n      constructor(props) {\n      super(props);\n     \n     }\n    \n    \n    render(){\n        return(\n        <tr>\n                \n                 <td>{this.props.id+1} </td>\n                <td> {this.props.obj.title}</td>\n                <td><img  src={this.props.obj.thumbnailUrl} /></td>\n                  <td><Link to={\"/detail-photo/\"+this.props.obj.id} > Detail Photo  </Link></td>\n        </tr>\n        );\n    }\n    \n}\nexport default  TableRowPhoto;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router';\nimport Setting from '../Setting'\nimport TableRowPhoto from '../component/TableRowPhoto'\n\n\nclass  List_photo extends Component{\n    constructor(props) {\n       super(props);\n        const { params } = this.props.match\n       this.state = {photos: [], id_album:  params.id};\n      \n     }\n     componentDidMount(){\n         axios.get(Setting.url + '/photos?albumId='+this.state.id_album)\n       .then(response => {\n         this.setState({ photos: response.data });\n         console.log('data post : '+JSON.stringify(response.data))\n       })\n       .catch(function (error) {\n         console.log(error);\n       })\n     }\n     render(){\n         return(<div>\n                <h1> List  Album User </h1>\n                <table>\n                    <thead>\n                        <tr>\n                            <td>Nomer </td>\n                             <td>title  </td>\n                             <td>Photo </td>\n                          \n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.photos.map((data,key)=>\n                        <TableRowPhoto key={key} id={key} obj={data}/>\n                    )}\n                    </tbody>\n                </table>\n                </div>);\n     }\n    \n}\nexport default List_photo;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Setting from '../Setting'\nclass Detail_photo extends Component{\n      constructor(props) {\n      super(props);\n        const { params } = this.props.match\n       this.state = {photo: [],album :[], id_photo:  params.id};\n     }\n    componentDidMount(){\n       \n         axios.get(Setting.url + '/photos?id='+this.state.id_photo)\n       .then(response => {\n         this.setState({ photo: response.data[0] },this.getdata_album.bind(this));\n           console.log('data get photo : '+JSON.stringify(response.data))\n       })\n       .catch(function (error) {\n         console.log(error);\n       })\n     }\n     getdata_album(){\n           axios.get(Setting.url + '/albums?id='+this.state.photo.albumId)\n       .then(response => {\n         this.setState({ album: response.data[0] });\n          console.log('data post : '+JSON.stringify(response.data))\n       })\n       .catch(function (error) {\n         console.log(error);\n       })\n     }\n    \n    render(){\n        return(\n      <div>\n       \n       <p> Titile Photo :  {this.state.photo.title}  </p>\n        <p> Titile Album  :  {this.state.album.title}  </p>\n        <p> Original Link   : <a href={this.state.photo.url} > {this.state.photo.url} </a>  </p>\n        <img src={this.state.photo.thumbnailUrl} />\n        \n      </div>\n        );\n    }\n    \n}\nexport default  Detail_photo;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Setting from '../Setting'\nclass Edit_comment extends Component{\n      constructor(props) {\n      super(props);\n        const { params } = this.props.match\n       this.state = {comment: [], id_comment:  params.id};\n     }\n    componentDidMount(){\n       \n         axios.get(Setting.url + '/comments?id='+this.state.id_comment)\n       .then(response => {\n         this.setState({ comment: response.data[0] });\n           console.log('data get photo : '+JSON.stringify(response.data))\n       })\n       .catch(function (error) {\n         console.log(error);\n       })\n     }\n    handle_update(){\n         console.log(this.state.comment);\n        axios.put(Setting.url + '/comments/'+this.state.id_comment,this.state.comment)\n       .then(response => {\n      \n           console.log('respon data  : '+JSON.stringify(response.data))\n           if(response.data !=''){\n               alert('Update Comment Berhasil');\n           }\n       })\n       .catch(function (error) {\n         console.log(error);\n       })\n    }\n    \n    render(){\n        return(\n      <div>\n       <h2> Edit  Comment</h2>\n       <p> Name  :    <input \n       value={this.state.comment.name !='' ? this.state.comment.name : ''  } \n       onChange={(value)=>this.setState({comment:{...this.state.comment,name:value.target.value}})} /> </p>\n        <p> Email  :   <input \n       value={this.state.comment.email !=''? this.state.comment.email : ''   } \n       onChange={(value)=>this.setState({comment:{...this.state.comment,email:value.target.value}})} />  </p>\n        <p> Body    :  <input \n       value={this.state.comment.body!='' ? this.state.comment.body :''   } \n       onChange={(value)=>this.setState({comment:{...this.state.comment,body:value.target.value}})} />  </p>\n        <input type=\"submit\" onClick={this.handle_update.bind(this)}  />\n      </div>\n        );\n    }\n    \n}\nexport default  Edit_comment;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Setting from '../Setting'\n\nclass Edit_post extends Component{\n      constructor(props) {\n      super(props);\n      console.log(\"ayo \")\n        const { params } = this.props.match\n       this.state = {post: [], id_post:  params.id};\n     }\n    componentDidMount(){\n         axios.get(Setting.url + '/posts?id='+this.state.id_post)\n       .then(response => {\n         this.setState({ post: response.data[0] });\n            console.log('respon data post : '+JSON.stringify(response.data))\n       })\n       .catch(function (error) {\n         console.log(error);\n       })\n     }\n    handle_update(){\n        console.log(this.state.post);\n        axios.put(Setting.url + '/posts/'+this.state.id_post,this.state.post)\n       .then(response => {\n           console.log('respon data  : '+JSON.stringify(response.data))\n           if(response.data !=''){\n               alert('Update Post Berhasil');\n           }\n       })\n       .catch(function (error) {\n         console.log(error);\n       })\n    }\n    \n    render(){\n        return(\n      <div>\n       <h2> Edit  Post</h2>\n       <p> Judul :    <input \n       value={this.state.post.title !='' ? this.state.post.title : '' } \n       onChange={(value)=>this.setState({post:{...this.state.post,title:value.target.value}})} /> </p>\n      \n        <p> Body    :  <input \n       value={this.state.post.body!='' ? this.state.post.body :''  } \n       onChange={(value)=>this.setState({post:{...this.state.post,body:value.target.value}})} />  </p>\n        <input type=\"submit\" onClick={this.handle_update.bind(this)}  />\n      </div>\n        );\n    }\n    \n}\nexport default  Edit_post;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Setting from '../Setting'\nimport { Button, Form, FormGroup, Label, Input, FormText, Row, Col } from 'reactstrap';\n\nclass Add_post extends Component{\n      constructor(props) {\n      super(props);\n      \n       this.state = {user :[], error:{userId:false, title:false, body:false },\n       post: {userId:'',title:'',body:''}};\n     }\n   \n    componentDidMount(){\n       \n         axios.get(Setting.url + '/users')\n       .then(response => {\n         this.setState({ user: response.data });\n           console.log('data get photo : '+JSON.stringify(response.data))\n       })\n       .catch(function (error) {\n         console.log(error);\n       })\n     }\n    handle_update(){\n        console.log(this.state.post);\n        axios.post(Setting.url + '/posts',this.state.post)\n       .then(response => {\n           console.log('respon data  : '+JSON.stringify(response.data))\n           if(response.data !=''){\n               alert('Simpan Post Berhasil');\n           }\n       })\n       .catch(function (error) {\n         console.log(error);\n       })\n    }\n    validation_user(){\n        if(this.state.post.userId==''){\n            \n        }\n    }\n    \n    render(){\n        return(\n            <div>\n            <Row>\n                <Col>\n                 <h2> Add Post</h2>\n                </Col>\n            </Row>\n      <Form>\n        <FormGroup>\n          <Label for=\"user\">Post Dengan User </Label>\n          <Input type=\"select\" name=\"email\" id=\"user\" placeholder=\"Pilih User\" \n           value={this.state.post.userId}\n           onChange={(value)=>this.setState({post:{...this.state.post,userId:value.target.value}})}\n          >\n           <option  value=\"null\">--Pilih User--</option>\n         {this.state.user.map((data,key)=>\n         <option key={key} value={data.id}>{data.name}</option>\n         )}\n          </Input>\n        </FormGroup>\n         <FormGroup>\n          <Label for=\"judul\">Judul Post </Label>\n          <Input type=\"text\" name=\"judul\" id=\"judul\" value={this.state.post.title !='' ? this.state.post.title : '' } \n            onChange={(value)=> this.setState({post:{...this.state.post,title:value.target.value}})} />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"body\">Body  </Label>\n          <Input type=\"textarea\" name=\"body\" id=\"body\" value={this.state.post.body!='' ? this.state.post.body :''  } \n       onChange={(value)=>this.setState({post:{...this.state.post,body:value.target.value}})} />\n        </FormGroup>\n        \n       <FormGroup >\n          <Col >\n            <Button  color=\"success\" onClick={this.handle_update.bind(this)} >Post</Button>\n          </Col>\n        </FormGroup>\n        \n       \n      \n      \n       \n      </Form>\n      </div>\n        );\n    }\n    \n}\nexport default  Add_post;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport History from './component/History';\nimport NavCostume from './component/NavCostume';\nimport { Container } from 'reactstrap';\n\nimport List_user from './page/List_user';\nimport List_post from './page/List_post';\nimport ListAll_post from './page/ListAll_post';\nimport List_album from './page/List_album';\nimport List_comment from './page/List_comment';\nimport List_photo from './page/List_photo';\nimport Detail_photo from './page/Detail_photo';\nimport Edit_comment from './page/Edit_comment';\nimport Edit_post from './page/Edit_post';\nimport Add_post from './page/Add_post';\n\n\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nconst routing = (\n  <Router history={History}>\n    <Container>\n      <NavCostume />\n     \n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/users\" component={List_user} />\n      <Route path=\"/post/:id\" component={List_post} />\n      <Route path=\"/add-post\" component={Add_post} />\n      <Route path=\"/post-all\" component={ListAll_post} />\n      <Route path=\"/edit-post/:id\" component={Edit_post} />\n      <Route path=\"/album/:id\" component={List_album} />\n      <Route path=\"/photo/:id\" component={List_photo} />\n      <Route path=\"/comment/:id\" component={List_comment} />\n      <Route path=\"/edit-comment/:id\" component={Edit_comment} />\n      <Route path=\"/detail-photo/:id\" component={Detail_photo} />\n     \n    </Container>\n  </Router>\n)\nReactDOM.render(routing, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}